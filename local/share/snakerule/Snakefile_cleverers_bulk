include: "conf.sk"

rule all_bulk:
	input: expand('{sample}_bulk_calls.tsv.gz', sample=MODELS)

def find_bulk(wildcards):
	for i in range(0, len(MODELS)):
		if MODELS[i] == wildcards.sample:
			break
	print(MODELS[i])
	print(BULK[i])
	return BULK[i]

def find_bulk_file(wildcards):
	return DATA+'/'+find_bulk(wildcards)+'.pass.vcf.gz'


rule bulk_vars:
    input:  vcf=find_bulk_file, chrs=DATA+"/chrs"
    output: '{sample}_bulk_calls.tsv.gz'
    params: tool=VCFTOBED1, multi=MULTI, kind=KIND, bulk=find_bulk
    log: "{sample}_bulk.multiallelic"
    shell: 
        """
            bcftools view -s {params.bulk} {input.vcf} | bcftools annotate -I +'%CHROM:%POS:%REF:%ALT' - \\
            | grep -v "^#" |  filter_1col 1 {input.chrs} | {params.tool} {params.kind} {params.multi} 2> {log} | gzip > {output}
        """

rule number_clonal:
    input: bulk="{model}_bulk_calls.tsv.gz", clone="{model}/all_fbcalls.tsv.gz"
    output: "{model}_clonal_{thr}_SNVs.tsv.gz"
    shell: 
        """
	    zcat {input.clone} | sed 's/\.fbcalls\.tsv\.gz//1' | bawk '$3 > {wildcards.thr} {{print $1,$2":"$3":"$4}}' > {output}.tmp
            zcat {input.bulk} | tr ":" "\\t" | bawk '$10 > {wildcards.thr} {{print "bulk_{wildcards.model}",$3}}' >> {output}.tmp
            gzip -c {output}.tmp > {output}
            rm {output}.tmp
        """

rule all_number:
    input: expand("{model}_clonal_{{thr}}_SNVs.tsv.gz", model=MODELS)
    output: "all_clonal_{thr}_n.txt"
    shell:
        """
            zcat {input} | cut -f 1 | sort | uniq -c | tr -s " " "\\t" |  cut -f 2,3 > {output}
        """