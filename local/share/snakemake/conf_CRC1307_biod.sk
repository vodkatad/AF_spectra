import os
def find_prj_root(path=os.getcwd()):
    if os.path.isfile(os.path.join(path,".PRJ_ROOT")):
        return path
    else:
        if path:
            return find_prj_root(os.path.dirname(path))
        else:
            raise Exception("Can not find the PRJ_ROOT directory")

PRJ_ROOT=find_prj_root()
BIOINFO_ROOT = os.getenv('BIOINFO_ROOT')

DATA=PRJ_ROOT+"/local/share/data/CRC1307_clones_biod"
BIN_DIR=PRJ_ROOT+"/local/bin"
SRC_DIR=PRJ_ROOT+"/local/src"

KIND="SNV" # | indel
MULTI="nomulti"

VCFTOBED=BIN_DIR+"/vcf_to_bed_biod"
CNLEN=BIN_DIR+"/cn_len_plot"

DBSNP=BIOINFO_ROOT+"/task/annotations/dataset/gnomad/chr_All_20180418.vcf.bgz"
CALLABLE=BIOINFO_ROOT+'/task/annotations/dataset/gnomad/wgs_calling_regions.hg38.bed.gz'

SAMPLES=['CRC1307LMO-0-B', 'CRC1307-02-0', 'CRC1307-08-0', 'CRC1307-09-0', 'CRC1307-02-1-A', 'CRC1307-02-1-B', 'CRC1307-02-1-E', 'CRC1307-08-1-B', 'CRC1307-08-1-D', 'CRC1307-08-1-E', 'CRC1307-09-1-B', 'CRC1307-09-1-C', 'CRC1307-09-1-E', 'CRC1307-08-MA-A', 'CRC1307-08-MA-C', 'CRC1307-08-MA-F', 'CRC1307-08-MC-D', 'CRC1307-08-MC-E', 'CRC1307-08-MC-F', 'CRC1307-08-MI-B', 'CRC1307-08-MI-F']
SAMPLE =  "^1740D" #"{wildcards.sample}" # "TUMOR" for varscan
WANTED_CN = "1,2,3"
SAMPLES_HIGH=["CRC1307-09","CRC1307-08","CRC1307-02"] # list comprehens TODO

wildcard_constraints:
    sample="[a-zA-Z0-9]+-[0-9]+-[A-Z0-9]+-?[A-Z0-9]?"

#bcftools view -s CRC1307LMO /home/egrassi/WGS/local/share/data/CRC1307_clones_biod/CRC1307LMO-0-B.pass.vcf.gz | bcftools annotate -I +'%CHROM:%POS:%REF:%ALT' - | grep -v "^#" |  filter_1col 1 /home/egrassi/WGS/local/share/data/CRC1307_clones_biod/chrs | /home/egrassi/WGS/local/bin/vcf_to_bed_biod SNV nomulti 2> CRC1307LMO-0-B.multiallelic | gzip > CRC1307LMO-0-B.tsv.gz
